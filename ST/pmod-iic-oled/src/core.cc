#include "core.h"
#include "common.h"
#include "oled.h"
#include "random.h"
#include "animation.h"
#include "round_watch_face.h"
#include "square_watch.h"
#include <cmath>
#include <cstdio>
// #include <cstdlib>

const uint8_t pic[] = {
	0x00,0x00,0x00,0x10,0x00,0x00,0x00,0x00,
	0x00,0x00,0x28,0x10,0x28,0x00,0x00,0x00,
	0x00,0x44,0x28,0x10,0x28,0x44,0x00,0x00,
	0x82,0x44,0x28,0x10,0x28,0x44,0x82,0x00,
	0x82,0x44,0x00,0x10,0x00,0x44,0x82,0x00,
	0x82,0x00,0x10,0x38,0x10,0x00,0x82,0x00,
	0x00,0x10,0x10,0x6c,0x10,0x10,0x00,0x00,
	0x10,0x10,0x00,0xc6,0x00,0x10,0x10,0x00,
	0x10,0x00,0x00,0x82,0x00,0x00,0x10,0x00,
	0x00,0x00,0x00,0x10,0x00,0x00,0x00,0x00,
	0x00,0x00,0x10,0x28,0x10,0x00,0x00,0x00,
	0x00,0x54,0x10,0x7c,0x10,0x54,0x00,0x00,
	0x92,0x54,0x10,0xee,0x10,0x54,0x92,0x00,
	0x92,0x10,0x00,0xc6,0x00,0x10,0x92,0x00,
	0x10,0x00,0x00,0x82,0x00,0x00,0x10,0x00
};




// hardcoded time values
int time_minutes = 10;
int time_hours = 10;
int time_seconds = 45;





void core(void) {
	U8G2_SSD1312_128X64_NONAME_1_SW_I2C u8g2(U8G2_R0);
	u8g2.setFont(u8g2_font_unifont_t_chinese2);
	u8g2.setBitmapMode(1);
	u8g2.begin();
	tbz::srand(13);

	tbz::animation<10> ani1(pic, 72, 8, 8, 8, 9, &u8g2);
	tbz::animation<10> ani2(pic+72, 54, 8, 8, 8, 6, &u8g2);

	const char str1[] = "你好，世界";
	uint8_t str1_x = (128-u8g2.getUTF8Width(str1))/2;
	uint8_t str1_y = (64+16)/2;


	tbz::round_watch_face rwf(&u8g2);

	tbz::SquareWatch sw(&u8g2);

	while(true) {

		// 清屏
		// u8g2.setDrawColor(0);
		// u8g2.drawBox(0,0,128,64);
		// u8g2.setDrawColor(1);
		u8g2.clearBuffer();  // 因为缺少 memset 的定义，导致这个函数无法正常工作
		// 链接方法 `-lc -lrdimon -u _printf_float`

		// 棋盘格
		// for (int i = 0; i < 128; i++) {
		// 	for (int j = 0; j < 64; j++) {
		// 		if ((i^j)%2)
		// 			u8g2.drawPixel(i, j);
		// 	}z
		// }

		// 动画1
		u8g2.drawUTF8(str1_x, str1_y, str1);
		ani1.draw();
		ani2.draw();

		// 动画2
		// rwf.draw(rand()%1000);

		// 动画3
		// time_seconds++;
		// if (time_seconds >= 60) {
		// 	time_seconds = 0;
		// 	time_minutes++;
		// 	if (time_minutes >= 60) {
		// 		time_minutes = 0;
		// 		time_hours++;
		// 		if (time_hours >= 12) {
		// 			time_hours = 0;
		// 		}
		// 	}
		// }
		// sw.draw(time_hours, time_minutes, time_seconds);

		u8g2.sendBuffer();
		HAL_Delay(33);
		flip(LED1);
	}

}